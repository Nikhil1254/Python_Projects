#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.2
#  in conjunction with Tcl version 8.6
#    May 18, 2020 10:49:59 AM IST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import YTaudio_downloader_support
import threading
from tkinter import *
from tkinter import messagebox
from tkinter import filedialog
import pafy

global gui_obj
global pafy_obj


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    YTaudio_downloader_support.set_Tk_var()
    top = Toplevel1 (root)
    YTaudio_downloader_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    YTaudio_downloader_support.set_Tk_var()
    top = Toplevel1 (w)
    YTaudio_downloader_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        getself(self)
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font12 = "-family {Segoe UI} -size 9"
        font13 = "-family {Segoe UI} -size 9 -weight bold"
        font14 = "-family {Courier New} -size 12"
        font9 = "-family {Comic Sans MS} -size 13 -underline 1"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("601x449+500+180")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(0, 0)
        top.title("YTaudio Downloader")
        top.iconbitmap('youtube.ico')
        top.configure(background="#d9d9d9")

        self.WelcomeText = tk.Label(top)
        self.WelcomeText.place(relx=0.183, rely=0.022, height=46, width=383)
        self.WelcomeText.configure(background="#d9d9d9")
        self.WelcomeText.configure(borderwidth="4")
        self.WelcomeText.configure(disabledforeground="#a3a3a3")
        self.WelcomeText.configure(font=font9)
        self.WelcomeText.configure(foreground="#000000")
        self.WelcomeText.configure(text='''Youtube To Audio Downloader''')

        self.linkEntry = tk.Entry(top)
        self.linkEntry.place(relx=0.05, rely=0.2,height=34, relwidth=0.639)
        self.linkEntry.configure(background="white")
        self.linkEntry.configure(disabledforeground="#a3a3a3")
        self.linkEntry.configure(font=font14)
        self.linkEntry.configure(foreground="#000000")
        self.linkEntry.configure(insertbackground="black")
        self.linkEntry.configure(textvariable=YTaudio_downloader_support.URL)

        self.linkBtn = tk.Button(top,command=audioInfo)
        self.linkBtn.place(relx=0.767, rely=0.2, height=33, width=96)
        self.linkBtn.configure(activebackground="#ececec")
        self.linkBtn.configure(activeforeground="#000000")
        self.linkBtn.configure(background="#d9d9d9")
        self.linkBtn.configure(cursor="hand2")
        self.linkBtn.configure(disabledforeground="#a3a3a3")
        self.linkBtn.configure(foreground="#000000")
        self.linkBtn.configure(highlightbackground="#d9d9d9")
        self.linkBtn.configure(highlightcolor="black")
        self.linkBtn.configure(pady="0")
        self.linkBtn.configure(text='''Enter Link''')

        self.downloadBtn = tk.Button(top,command=downloadThread)
        self.downloadBtn.place(relx=0.433, rely=0.334, height=33, width=106)
        self.downloadBtn.configure(activebackground="#ececec")
        self.downloadBtn.configure(activeforeground="#000000")
        self.downloadBtn.configure(background="#d9d9d9")
        self.downloadBtn.configure(cursor="hand2")
        self.downloadBtn.configure(disabledforeground="#a3a3a3")
        self.downloadBtn.configure(foreground="#000000")
        self.downloadBtn.configure(highlightbackground="#d9d9d9")
        self.downloadBtn.configure(highlightcolor="black")
        self.downloadBtn.configure(pady="0")
        self.downloadBtn.configure(text='''Download''')

        self.audioTitle = tk.Label(top)
        self.audioTitle.place(relx=0.033, rely=0.535, height=26, width=42)
        self.audioTitle.configure(background="#d9d9d9")
        self.audioTitle.configure(disabledforeground="#a3a3a3")
        self.audioTitle.configure(font=font13)
        self.audioTitle.configure(foreground="#000000")
        self.audioTitle.configure(text='''Title :''')

        self.aduioDuration = tk.Label(top)
        self.aduioDuration.place(relx=0.017, rely=0.624, height=26, width=92)
        self.aduioDuration.configure(background="#d9d9d9")
        self.aduioDuration.configure(disabledforeground="#a3a3a3")
        self.aduioDuration.configure(font=font13)
        self.aduioDuration.configure(foreground="#000000")
        self.aduioDuration.configure(text='''Duration :''')

        self.fileSize = tk.Label(top)
        self.fileSize.place(relx=0.017, rely=0.713, height=26, width=83)
        self.fileSize.configure(background="#d9d9d9")
        self.fileSize.configure(disabledforeground="#a3a3a3")
        self.fileSize.configure(font=font13)
        self.fileSize.configure(foreground="#000000")
        self.fileSize.configure(text='''Filesize :''')

        self.bitRate = tk.Label(top)
        self.bitRate.place(relx=0.017, rely=0.78, height=56, width=82)
        self.bitRate.configure(background="#d9d9d9")
        self.bitRate.configure(disabledforeground="#a3a3a3")
        self.bitRate.configure(font=font13)
        self.bitRate.configure(foreground="#000000")
        self.bitRate.configure(text='''Bitrate :''')

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.383, rely=0.871, height=26, width=149)
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(font=font12)
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(text='''Publisher : Nikhil Patil''')

        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.3, rely=0.913, height=36, width=252)
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(text='''contact : np52622@gmail.com''')

        self.TProgressbar1 = ttk.Progressbar(top)
        self.TProgressbar1.place(relx=0.383, rely=0.445, relwidth=0.283
                , relheight=0.0, height=22)
        self.TProgressbar1.configure(length="170",maximum=100,value=0,)

        self.titleValue = tk.Label(top)
        self.titleValue.place(relx=0.116, rely=0.535, height=26, width=512)
        self.titleValue.configure(anchor='w')
        self.titleValue.configure(background="#d9d9d9")
        self.titleValue.configure(disabledforeground="#a3a3a3")
        self.titleValue.configure(foreground="#000000")

        self.durationValue = tk.Label(top)
        self.durationValue.place(relx=0.166, rely=0.624, height=26, width=252)
        self.durationValue.configure(anchor='w')
        self.durationValue.configure(background="#d9d9d9")
        self.durationValue.configure(disabledforeground="#a3a3a3")
        self.durationValue.configure(foreground="#000000")

        self.filesizeValue = tk.Label(top)
        self.filesizeValue.place(relx=0.15, rely=0.713, height=26, width=182)
        self.filesizeValue.configure(anchor='w')
        self.filesizeValue.configure(background="#d9d9d9")
        self.filesizeValue.configure(cursor="fleur")
        self.filesizeValue.configure(disabledforeground="#a3a3a3")
        self.filesizeValue.configure(foreground="#000000")

        self.bitrateValue = tk.Label(top)
        self.bitrateValue.place(relx=0.15, rely=0.802, height=36, width=152)
        self.bitrateValue.configure(anchor='w')
        self.bitrateValue.configure(background="#d9d9d9")
        self.bitrateValue.configure(disabledforeground="#a3a3a3")
        self.bitrateValue.configure(foreground="#000000")

        self.downloaded = tk.Label(top,text='',bg='#d9d9d9')
        self.downloaded.place(x=410,y=200)

        self.speed = tk.Label(top,text='',bg='#d9d9d9')
        self.speed.place(x=540,y=415)

def getself(self):
    global gui_obj
    gui_obj = self

def audioInfo():
    global pafy_obj
    try:
        gui_obj.linkBtn.config(state=DISABLED)
        url = YTaudio_downloader_support.URL.get()
        if url == '':
            gui_obj.linkBtn.config(state=NORMAL)
            return
        pafy_obj = pafy.new(url)
        audioStream = pafy_obj.getbestaudio()
        filesize = round(audioStream.get_filesize()/(1024*1024),2)

        gui_obj.titleValue.config(text=str(pafy_obj.title))
        gui_obj.filesizeValue.config(text=str(filesize)+' Mb')
        gui_obj.bitrateValue.config(text=str(audioStream.bitrate))
        gui_obj.durationValue.config(text=str(pafy_obj.duration))
    except:
     messagebox.showerror('Network error','Please check URL and Internet connection!')

    gui_obj.linkBtn.config(state=NORMAL)

def downloadThread():
    downloadThread = threading.Thread(target=download)
    downloadThread.start()

def download():
   global pafy_obj
   gui_obj.downloadBtn.config(state=DISABLED)
   url = YTaudio_downloader_support.URL.get()
   if url == '':
      messagebox.showinfo('Information','Enter URL first!')
      gui_obj.downloadBtn.config(state=NORMAL)
      return

   try:
      audiostream = pafy_obj.getbestaudio()

      path = filedialog.askdirectory()
      audiostream.download(filepath=path+'/',callback=progress)
      gui_obj.speed.config(text='')
      messagebox.showinfo('Info','Download Completed.')


   except:
        if threading.main_thread().is_alive() == True:  # ye ya sathi ahe downloading chalu astanna window band keli tr
            messagebox.showerror('Something Went Wrong','Check URL and Internet Connection!!!')
        else:
            exit()

   try:
        gui_obj.downloadBtn.config(state=NORMAL, text='Download')
   except:
        pass

def progress(total,recvd,ratio,rate,eta):
   gui_obj.downloadBtn.config(text=' {}%'.format(round(ratio*100)))
   gui_obj.TProgressbar1['value'] = ratio*100
   downloaded = str(round(recvd/(1024*1024),2))+' MB'
   gui_obj.downloaded.config(text=downloaded)
   gui_obj.speed.config(text=str(round(rate,2))+' KB')
   #gui_obj.downloadBtn.config(text='{} KB/s'.format(round(rate,2)))
   #print("downloaded : {}".format(round(ratio*100)),'speed : {}'.format(round(rate,2)),'ETA : {} min'.format(eta/60))

if __name__ == '__main__':
    vp_start_gui()





